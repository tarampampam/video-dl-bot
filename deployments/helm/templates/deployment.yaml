{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "videoDownloaderBot.fullname" . }}
  namespace: {{ template "videoDownloaderBot.namespace" . }}
  labels:
    {{- include "videoDownloaderBot.commonLabels" . | nindent 4 }}

spec:
  {{- with .Values.deployment }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "videoDownloaderBot.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      {{- with .podAnnotations }}
      annotations:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      labels:
        {{- include "videoDownloaderBot.commonLabels" $ | nindent 8 }}
        {{- with .labels }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: false
      {{- with .imagePullSecrets }}
      imagePullSecrets:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "videoDownloaderBot.fullname" $ }}
          {{- with .securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.image }}
          image: "{{ .repository }}:{{ .tag | default $.Chart.AppVersion }}{{- if .locale}}-{{ .locale }}{{ end }}"
          imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
          {{- end }}
          {{- with .args }}
          args:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          env:
            {{- with $.Values.config.botToken }}
            {{- $botTokenEnvName := "BOT_TOKEN" }}
            {{- if .plain }}
            - name: "{{ $botTokenEnvName }}"
              value: {{ tpl .plain $ | quote }}
            {{- else if .fromSecret.enabled }}
            - name: "{{ $botTokenEnvName }}"
              valueFrom:
                secretKeyRef:
                  name: {{ tpl .fromSecret.secretName $ | quote }}
                  key: {{ tpl .fromSecret.secretKey $ | quote }}
            {{- else if .fromConfigMap.enabled }}
            - name: "{{ $botTokenEnvName }}"
              valueFrom:
                configMapKeyRef:
                  name: {{ tpl .fromConfigMap.configMapName $ | quote }}
                  key: {{ tpl .fromConfigMap.configMapKey $ | quote }}
            {{- else }}
            - name: "{{ $botTokenEnvName }}"
              value: "VALUES ERROR: config.botToken is not set"
            {{- end }}
            {{- end }}
            {{- with $.Values.config }}
            {{- if .cookiesFile }}
            - {name: COOKIES_FILE, value: "{{ .cookiesFile }}"}
            {{- end }}
            {{- if .log.level }}
            - {name: LOG_LEVEL, value: "{{ .log.level }}"}
            {{- end }}
            {{- if .log.format }}
            - {name: LOG_FORMAT, value: "{{ .log.format }}"}
            {{- end }}
            {{- if .maxConcurrentDownloads }}
            - {name: MAX_CONCURRENT_DOWNLOADS, value: "{{ .maxConcurrentDownloads }}"}
            {{- end }}
            {{- end }}
            {{- with $.Values.deployment.env }}
            {{- tpl (toYaml .) $ | nindent 12 }}
            {{- end }}

          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .volumeMounts }}
          volumeMounts:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}

      {{- with .volumes }}
      volumes:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      {{- with .nodeSelector }}
      nodeSelector:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      {{- with .affinity }}
      affinity:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      {{- with .tolerations }}
      tolerations:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
  {{- end }}
{{- end }}
